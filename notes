Question

FEATURES TO BUILD
4. Abort and rollback the transaction (LONG)
5. Checkpoint and restore (OK)
6.5 Test abort sequence
6. Run test for NOOP transactions
7. Fixed Groups part <RELATIVELY EASY>
8. Transactional Creates

TEST EVERYTHING
9. Transactional Deletes
10. Start running experiments to get results


Things to write about
1. Complete Protocol Description
2. Write trade of 90 %
3. Write up about Trade off with networking 
4.



1. Fill up with Document after each level.


######################## WAIT ###########################
FIX:d. How would responses be recieved by clients
e. Rebuild Secondary to take over primary with co-ordination.
a. Transaction ID is being repeated.(fixed)
b. Responses are messy, create a single packet interface(done)


1. The transaction should be sent and received at the entry server.
2. The entry server pushes it into the transaction module after co-ordination.
3. Sends a reply of Ok to the Replica initiating the request.
4. Fix Packet ID key architecture
5. Fix Packet type Response architecture
6. Write Code for Secondary
7. Write atleast one test


#### Later priorities
1. Create new packet types to handle message responses for client


a.  Completely understand ProtocolExecutor ??
ProtocolPacket

ProtocolTask
MessageTask

b.  How are Messaging Tasks handled ??
c.  How are messages to services sent and received
NIOMessenger -> Packet Demultiplexer(to receive Messsages) and NodeConfig(to get address)
ProtocolExecuter(Takes in NIOMesseger to send)
and all received messages are to be handed off via handleMessage

c. Where does the protocol executor wait for messages ??
At handleMessage
On recieve can either spawn another protocolTask or stay if it is not removed or respond with messages

#### Code clean up

AbstractTransactor.java (CURENT) *********** DONE
Transaction.java ----------Move this into TXPacket
DistTransactor.java
TxCallback.java *************************** DONE
TXUtils.java ******************************DONE
event_action_protocol.txt
TXLockerMap.java **************************DONE

txn/exceptions:
ResponseCode.java  TXException.java

txn/interfaces:
Transactor.java  TXInterface.java  TXLocker.java  TxOp.java  TXRequest.java

txn/testing:
NoopAppTX.java

txn/txpackets: --- ALL Fixed
AbortRequest.java
LockRequest.java
TXPacket.java ******************************* Cleaned
UnlockRequest.java
CommitRequest.java  ***************************
TxOpRequest.java
TxStateRequest.java
